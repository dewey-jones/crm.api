// <auto-generated />
using crmApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace crmApi.Migrations
{
    [DbContext(typeof(CrmContext))]
    [Migration("20171103012807_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("crmApi.Models.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Addr1");

                    b.Property<string>("Addr2");

                    b.Property<int>("Appropriate");

                    b.Property<DateTime>("CallOn");

                    b.Property<string>("City");

                    b.Property<string>("CompanyName");

                    b.Property<string>("CompanyNotes");

                    b.Property<bool>("Consultants");

                    b.Property<bool>("Contact");

                    b.Property<long>("Employees");

                    b.Property<bool>("Mail");

                    b.Property<DateTime>("MailDate");

                    b.Property<bool>("Nearby");

                    b.Property<string>("Phone");

                    b.Property<int>("Rating");

                    b.Property<long>("Sales");

                    b.Property<string>("State");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("crmApi.Models.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Addr1");

                    b.Property<string>("Addr2");

                    b.Property<string>("City");

                    b.Property<long>("CompanyId");

                    b.Property<DateTime>("DateContacted");

                    b.Property<DateTime>("DateMailed");

                    b.Property<string>("Dept");

                    b.Property<string>("Email");

                    b.Property<string>("Ext");

                    b.Property<string>("FName");

                    b.Property<string>("LName");

                    b.Property<bool>("NetworkingContact");

                    b.Property<DateTime>("NextCall");

                    b.Property<bool>("NoChance");

                    b.Property<string>("Phone");

                    b.Property<int>("Rating");

                    b.Property<bool>("ShouldContact");

                    b.Property<string>("State");

                    b.Property<string>("Title");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("crmApi.Models.Note", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ContactDate");

                    b.Property<long>("ContactId");

                    b.Property<string>("NoteText");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("crmApi.Models.Rating", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("RatingValue");

                    b.HasKey("Id");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("crmApi.Models.Zipcode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<int>("Proximity");

                    b.HasKey("Id");

                    b.ToTable("Zipcodes");
                });

            modelBuilder.Entity("crmApi.Models.Contact", b =>
                {
                    b.HasOne("crmApi.Models.Company", "Company")
                        .WithMany("Contacts")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("crmApi.Models.Note", b =>
                {
                    b.HasOne("crmApi.Models.Contact", "Contact")
                        .WithMany("Notes")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
